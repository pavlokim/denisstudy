<?php

/**
 * Implementation of hook_batire_xml_parseapi()
 *
 * @param $op
 *   Operation
 * @param array &$data
 *   Result of parse process, if already processed
 * @param DOMDocument &$dom
 *   DOM object parsed from XML
 * @return
 *   Result of parse process, if already processed
 */
function batire_xml_parse_pratique_batire_xml_parseapi($op, &$data, $dom = NULL) {
  switch ($op) {
    case 'suggest types':
      $xpath = batire_xml_get_xpath($dom);
      $product = strtoupper(batire_xml_node_value_get($xpath, "//source/@classe"));
      $product1 = strtoupper(batire_xml_node_value_get($xpath, "/qc:doc-root/qc:doc-meta/xms:product | /qc:doc-root/qc:doc-meta/ns0:product | /qc:doc-root/qc:doc-meta/ns1:product  | /qc:doc-root/qc:doc-meta/ns1:product"));
      if ($product == 'ARTICLE' && $product1 != 'ARTICLEBATIRDOCUMENT_REF') {
        return BATIRE_HIERARCHY_DT_ARICLE;
      }
      if ($product == 'FICHE') {
        return BATIRE_HIERARCHY_DT_MEDIA;
      }
      break;
    case 'process':
      if ($data['type'] == BATIRE_HIERARCHY_DT_ARICLE && $data['type'] != 'ARTICLEBATIRDOCUMENT_REF') {
        _batire_xml_parse_aricle_parse($data, $dom);
        if (variable_get("batire_xml_parse_drush_verbose", FALSE)) {
          drush_print("Here we process $data[type]:");
          drush_print_r($data);
        }
      } elseif ($data['type'] == BATIRE_HIERARCHY_DT_MEDIA) {
        _batire_xml_parse_fiche_media_parse($data, $dom);
        if (variable_get("batire_xml_parse_drush_verbose", FALSE)) {
          drush_print("Here we process $data[type]:");
          drush_print_r($data);
        }
      }
      break;
    case 'postprocess':
      if ($data['type'] == BATIRE_HIERARCHY_DT_ARICLE && $data['type'] != 'ARTICLEBATIRDOCUMENT_REF') {
        _batire_xml_parse_article_store($data, $dom);
        if (variable_get("batire_xml_parse_drush_verbose", FALSE)) {
          drush_print("Here we must create node based on:");
          drush_print_r($data);
        }
      } else if ($data['type'] == BATIRE_HIERARCHY_DT_MEDIA) {
        _batire_xml_parse_fiche_media_store($data, $dom);
        if (variable_get("batire_xml_parse_drush_verbose", FALSE)) {
          drush_print("Here we must create node based on:");
          drush_print_r($data);
        }
      }
      break;
    case 'postgeneration':
      //$args = func_get_args();
      //$nid = $args[2];
      //$generation_data = $args[3];
      //$page_data = mongodb_page_get_node_page($nid);

      break;
  }
}

function _batire_xml_parse_aricle_parse(&$data, $dom) {
  $data['doc_type'] = BATIRE_HIERARCHY_DT_ARICLE;
  $data['type'] = BATIRE_HIERARCHY_DT_ARICLE;
  _batire_xml_parse_common_data($data, $dom);
  _batire_xml_parse_get_links($data, $dom);

}

function _batire_xml_parse_fiche_media_parse(&$data, $dom) {
  $data['doc_type'] = BATIRE_HIERARCHY_DT_MEDIA;
  $data['type'] = BATIRE_HIERARCHY_DT_MEDIA;
  _batire_xml_parse_common_data($data, $dom);
  _batire_xml_parse_get_links($data, $dom);
  _batire_xml_parse_get_media($data, $dom);


}

function _batire_xml_parse_article_store(&$data, $dom) {

  $doc_type = batire_hierarchy_get_doc_type($data['doc_type']);

  //Check if document already exists
  $hierarchy = batire_hierarchy_get_by_bid($data['bid']);
  if ($hierarchy && $hierarchy->nid) {
    $node = node_load($hierarchy->nid);
    $data['date_editoriale'] = $node->created;
  } else {
    //create new document
    $node = new stdClass();
    $data['date_editoriale'] = time();
    $node->type = $doc_type['content_type'];
    $node->uid = 1; //@TODO: use some user from settings
  }
  $node->title = $data['titre'];
  $node->field_bid[0]['value'] = $data['bid'];

  /// *************************************

  //$node->field_date_maj[0]['value'] = time();
  $data['date_maj'] = time();

  if (isset($data['surtitre']))
    $node->field_surtitle[0]['value'] = $data['surtitre'];
  if (isset($data['soustitre']))
    $node->field_subtitle[0]['value'] = $data['soustitre'];
  if (isset($data['nb_mots']))
    $node->field_nb_mots[0]['value'] = $data['nb_mots'];
  if ($data['date_document']) {
    $timestamp = batire_xml_parse_convert_date($data['date_document']);
    if ($timestamp) {
      $node->field_date_vide[0]['value'] = 0;
      $data['date_vide'] = 0;
    }
    else {
      $node->field_date_vide[0]['value'] = 1;
      $data['date_vide'] = 1;
    }
    $node->field_date_document[0]['value'] = $timestamp;
    $data['date_document'] = $timestamp;
  } else {
    $node->field_date_vide[0]['value'] = 1;
    $data['date_vide'] = 1;
    $node->field_date_document[0]['value'] = $data['date_document'];
  }

  if (isset($data['parution']))
    $node->field_puration[0]['value'] = $data['parution'];
  if (isset($data['numero_de_page']))
    $node->field_puration_page[0]['value'] = $data['numero_de_page'];
  if (isset($data['numero_de_parution']))
    $node->field_release_num[0]['value'] = $data['numero_de_parution'];
  if ($data['date_parution']) {
    $node->field_puration_date[0]['value'] = batire_xml_parse_convert_date($data['date_parution']);
    $data['puration_date'] = $node->field_puration_date[0]['value'];
  }

  if (isset($data['auteur']) && count($data['auteur']) > 0) {
    //$node->field_authors = batire_add_cck_field_auteur($node->field_author, $data['auteur'][0]);
    foreach ($data['auteur'] as $author) {
      if (empty($author['nom'])) {
        continue;
      }
      $node->field_authors = _batire_xml_parse_add_author_node($node->field_authors, $author);

    }
  }

  if ($data['chapo']) {
    $node->field_teaser[0]['value'] = $data['chapo'];
  }
  if ($data['note']) {
    $node->field_xml_note[0]['value'] = $data['note'];
  }
  if ($data['links']) {
    //Lien Fils
    if ($data['links']['lien_fils']) {
      $node->field_lien_fils = array();
      foreach ($data['links']['lien_fils'] as $lien_fil) {
        $node->field_lien_fils[] = $lien_fil;
      }
    }
    //Lien Reference
    if ($data['links']['lien_reference']) {
      $node->field_lien_reference = array();
      foreach ($data['links']['lien_reference'] as $lien_reference) {
        $node->field_lien_reference[] = $lien_reference;
      }
    }
  }

  $xpath      = batire_xml_get_xpath($dom);
  $taxonomy   = array_unique(batire_xml_get_taxonomy($xpath));
  $taxonomy[] = BATIRE_SITE_TID_TYPE_DE_DOCUMENT_ACTUALITE;


  $term = batire_get_tid_by_description($data['support'], BATIRE_SITE_VID_SUPPORT);
  if ($term) {
     $taxonomy[] = $term;
  }

  /*
    // Process taxonomy
    $terms = array();
    // Code de contenu

    $terms[CP_CODE_DE_CONTENU_VID] = CP_CODE_PRESSE_TID;
    // Type du document
    $terms[CP_TYPE_DU_DOCUMENT_VID] = CP_SITE_TID_PUBLICATION;
    // Type de publication
    if ($data['taxonomy']['produit']) {
    if ($collection) {
    if ($data['numero_de_parution'] && $data['date_parution']) {
    // Process Type de publication taxonomy for Collections
    $month_number = date('n', strtotime($data['date_parution']));
    $month_name = _cp_site_get_french_month($month_number);
    $term_name = 'nÂ°' . $data['numero_de_parution'] . ' - ' . $month_name . ' ' . date('Y', strtotime($data['date_parution']));
    $term = cp_xml_parse_get_tid_by_name($term_name, CP_TYPE_DE_PUBLICATION_VID);
    if (empty($term)) {
    // Create term if not exists
    $term_data = array(
    'name' => $term_name,
    'parent' => array(CP_REVUE_TID => CP_REVUE_TID),
    'vid' => CP_TYPE_DE_PUBLICATION_VID,
    );
    if (taxonomy_save_term($term_data)) {
    // Assign term if created
    $terms[CP_TYPE_DE_PUBLICATION_VID] = $term_data['tid'];
    $data['root_tid'] = $term_data['tid'];
    } else {
    cp_error_log("\nCannot create Collection term for Type de publication by value " . $term_name, $filename);
    }
    } else {
    // Assign Collection term
    $terms[CP_TYPE_DE_PUBLICATION_VID] = $term;
    $data['root_tid'] = $term;
    }
    } else $data['errors'][] = "Empty date or numero de parution";
    } else {
    $terms[CP_TYPE_DE_PUBLICATION_VID] = cp_xml_parse_get_tid_by_description($data['taxonomy']['produit'], CP_TYPE_DE_PUBLICATION_VID);
    if (empty($terms[CP_TYPE_DE_PUBLICATION_VID])) cp_error_log("\nCannot find term for Type de publication by value " . $data['taxonomy']['produit'], $filename);
    }
    }

    //Presse: genre
    if ($data['taxonomy']['presse_genre']) {
    $terms['tags'][CP_PRESSE_GENRE_VID] = $data['taxonomy']['presse_genre'];
    }
    //Presse: mots clefs
    if ($data['taxonomy']['presse_mots_clefs']) {
    if (is_array($data['taxonomy']['presse_mots_clefs'])) {
    $terms['tags'][CP_PRESSE_MOTS_CLEFS_VID] = implode(",", $data['taxonomy']['presse_mots_clefs']);
    } else $terms['tags'][CP_PRESSE_MOTS_CLEFS_VID] = $data['taxonomy']['presse_mots_clefs'];
    }
    //Presse: rubrique
    if ($data['taxonomy']['presse_rubrique']) {
    if (is_array($data['taxonomy']['presse_rubrique'])) {
    $terms['tags'][CP_PRESSE_RUBRIQUE_VID] = implode(",", $data['taxonomy']['presse_rubrique']);
    } else $terms['tags'][CP_PRESSE_RUBRIQUE_VID] = $data['taxonomy']['presse_rubrique'];
    }
    // Check parsed data for errors
    if ($data['type'] != 'collection') $data['errors'] = array_merge($data['errors'], cp_xml_parse_check_node_errors(array('Body' => $data['body'], 'Type de publication' => $terms[CP_TYPE_DE_PUBLICATION_VID]), $data['filename']));
    else $data['errors'] = array_merge($data['errors'], cp_xml_parse_check_node_errors(array('Type de publication' => $terms[CP_TYPE_DE_PUBLICATION_VID]), $data['filename']));

    $node->taxonomy = $terms;

   */

   $node->taxonomy = $taxonomy;

  //*****************************************

  $data_map = array(
    'reference' => 'field_doc_number',
    'date_document' => 'field_release_date',
    'release_num' => 'field_release_num'
  );
  foreach ($data_map as $from => $to) {
    $arr_to = explode(' ', $to);
    $to = $arr_to[0];

    if (is_numeric($from)) {
      $from = $to;
      $to = 'field_' . $to;
    }
    if (!empty($data[$from])) {
      if (isset($arr_to[1]) && $arr_to[1] = 'date') {
        $node->{$to} = array(array('value' => batire_xml_parse_convert_date($data[$from])));
      } else {
        $node->{$to} = array(array('value' => $data[$from]));
      }
    } elseif (isset($node->{$to})) {
      unset($node->{$to});
    }
  }

  $node->language = 'fr';
  $node->parsed_data = $data;

  node_save($node);


  $data['node'] = $node;
  $data['op'] = $node->is_new ? 'add' : 'edit';

  batire_xml_parse_queue_content($node->nid, NULL, $node->is_new);
}

function _batire_xml_parse_fiche_media_store(&$data, $dom) {
  $doc_type = batire_hierarchy_get_doc_type($data['doc_type']);

  //Check if document already exists
  $hierarchy = batire_hierarchy_get_by_bid($data['bid']);
  if ($hierarchy && $hierarchy->nid) {
    $node = node_load($hierarchy->nid);
  } else {
    //create new document
    $node = new stdClass();
    $node->type = $doc_type['content_type'];
    $node->uid = 1; //@TODO: use some user from settings
  }
  $node->title = $data['titre'];
  $node->field_bid[0]['value'] = $data['bid'];

  //****************************************
  $node->field_date_maj[0]['value'] = time();

  if ($data['date_document']) {
    $timestamp = batire_xml_parse_convert_date($data['date_document']);
    if ($timestamp)
      $node->field_date_vide[0]['value'] = 0;
    else
      $node->field_date_vide[0]['value'] = 1;
    $node->field_date_document_full[0]['value'] = $timestamp;

    $data['date_document'] = batire_xml_parse_crop_date($data['date_document'], 'year_month');
    $timestamp = batire_xml_parse_convert_date($data['date_document']);
    $node->field_date_document[0]['value'] = $timestamp;
  } else {
    $node->field_date_vide[0]['value'] = 1;
    $node->field_date_document_full[0]['value'] = $data['date_document'];
    $node->field_date_document[0]['value'] = $data['date_document'];
  }

  if ($data['copyright']) {
    $node->field_copyright[0]['value'] = $data['copyright'];
  }

  $filename = $data['filename'];
  if ($data['media']) {
    if ($data['media']['vignette']) {
      $data['attached'][] = $data['media']['vignette_path'].$filename;
      /*
        $node->field_fiche_thumb[0] = array(
        'fid' => $file['fid'],
        'title' => $file['filename'],
        'filename' => $file['filename'],
        'filepath' => $file['filepath'],
        'filesize' => $file['filesize'],
        'list' => 1, // always list
        'filemime' => $file['filemime'],
        'description' => NULL);
       */
    }
    if ($data['media']['legende']) {
      $node->field_fiche_legend[0]['value'] = $data['media']['legende'];
    }
    if ($data['media']['fiche']) {
      $data['attached'][] = $data['media']['fiche_path'];
      /*
        $node->field_fiche[0] = array(
        'fid' => $file['fid'],
        'title' => $file['filename'],
        'filename' => $file['filename'],
        'filepath' => $file['filepath'],
        'filesize' => $file['filesize'],
        'list' => 1, // always list
        'filemime' => $file['filemime'],
        'description' => NULL);
       */
    }
  }

  if (isset($data['auteur']) && count($data['auteur']) > 0) {
    //$node->field_authors = batire_add_cck_field_auteur($node->field_author, $data['auteur'][0]);
    foreach ($data['auteur'] as $author) {
      if (empty($author['nom'])) {
        continue;
      }
      $node->field_authors = _batire_xml_parse_add_author_node($node->field_authors, $author);

    }
  }


  if ($data['links']) {
    //Lien Fils
    if ($data['links']['lien_fils']) {
      $node->field_lien_fils = array();
      foreach ($data['links']['lien_fils'] as $lien_fil) {
        $node->field_lien_fils[] = $lien_fil;
      }
    }
    //Lien Reference
    if ($data['links']['lien_reference']) {
      $node->field_lien_reference = array();
      foreach ($data['links']['lien_reference'] as $lien_reference) {
        $node->field_lien_reference[] = $lien_reference;
      }
    }
  }
  // Process taxonomy

  $taxonomy = array();
  $taxonomy[] = BATIRE_SITE_TID_TYPE_DE_DOCUMENT_ACTUALITE;
  /*
  $terms = array();
  // Code de contenu
  $terms[CP_CODE_DE_CONTENU_VID] = CP_CODE_PRESSE_TID;

  // DOCUMENT PRATIQUE taxonomy
  if ($data['taxonomy']['genre'] == 'DOCUMENT PRATIQUE') {
    $node->field_practique[0]['value'] = 1;
    // Type du document
    $terms[CP_TYPE_DU_DOCUMENT_VID] = CP_SITE_TID_PRATIQUE;
    //Type des documents practiques
    if ($data['taxonomy']['presse_genre']) {
      $terms[CP_TYPE_DES_PRACTIQUES_VID] = cp_xml_parse_get_tid_by_description($data['taxonomy']['presse_genre'], CP_TYPE_DES_PRACTIQUES_VID);
      if (empty($terms[CP_TYPE_DES_PRACTIQUES_VID])) {
        cp_error_log("\nCannot find term for Type des documents practiques by value " . $data['taxonomy']['presse_genre'], $filename);
        $data['errors'][] = "Cannot find term for Type des documents practiques by value " . $data['taxonomy']['presse_genre'];
      }
    }
  } else {
    // Save type of binary file to Type de fiche media vocabulary
    $terms[CP_TYPE_DE_FICHE_MEDIA_VID] = cp_xml_parse_get_tid_by_name($data['taxonomy']['genre'], CP_TYPE_DE_FICHE_MEDIA_VID);
    if (empty($terms[CP_TYPE_DE_FICHE_MEDIA_VID]))
      $terms[CP_TYPE_DE_FICHE_MEDIA_VID] = cp_xml_parse_get_tid_by_description($data['taxonomy']['genre'], CP_TYPE_DE_FICHE_MEDIA_VID);
    if (empty($terms[CP_TYPE_DE_FICHE_MEDIA_VID])) {
      cp_error_log("\nCannot find term for Type de fiche media by value " . $data['taxonomy']['genre'], $filename);
      $data['errors'][] = "Unknown term for Type de fiche media - " . $data['taxonomy']['genre'];
    }
  }

  // Check parsed data for errors
  $data['errors'] = array_merge($data['errors'], cp_xml_parse_check_node_errors(array('Fiche' => $data['media']['fiche']), $data['filename']));
  $node->taxonomy = $terms;
  */

  //***************************************

  $node->taxonomy = $taxonomy;

  $data_map = array(
    'reference' => 'field_doc_number'
  );
  foreach ($data_map as $from => $to) {
    $arr_to = explode(' ', $to);
    $to = $arr_to[0];

    if (is_numeric($from)) {
      $from = $to;
      $to = 'field_' . $to;
    }
    if (!empty($data[$from])) {
      if (isset($arr_to[1]) && $arr_to[1] = 'date') {
        $node->{$to} = array(array('value' => batire_xml_parse_convert_date($data[$from])));
      } else {
        $node->{$to} = array(array('value' => $data[$from]));
      }
    } elseif (isset($node->{$to})) {
      unset($node->{$to});
    }
  }

  $node->language = 'fr';
  $node->parsed_data = $data;

  node_save($node);


  $data['node'] = $node;
  $data['op'] = $node->is_new ? 'add' : 'edit';

  batire_xml_parse_queue_content($node->nid, NULL, $node->is_new);
}

function _batire_xml_parse_common_data(&$data, $dom) {
  $xpath = batire_xml_get_xpath($dom);



  $parsed = batire_xml_multiple_node_value_get($xpath, array(
    'id' => '//identification/@id',
    'date_document' => '//source/publication/@date',
    'xms_title' => '//xms/@title',
    'titre' => '//contenu_texte/titre',
    'copyright' => '//source/copyright',
    'surtitre' => '//contenu_texte/surtitre',
    'soustitre' => '//contenu_texte/soustitre',
    'nb_mots' => '//source/nb_mots',
    'chapo' => '//contenu_texte/chapo',
    'note' => '//contenu_texte/note',
    'release_num' =>'/qc:doc-root/qc:doc-meta/ns0:numero_parution',
    'support' => '/qc:doc-root/qc:doc-content/article/relation_produit/produit'
    ));
  $parsed['taxonomy'] = batire_xml_multiple_node_value_get($xpath, array(
    'mots_clefs' => '//indexation/terme/@libelle',
    'presse_genre' => '//source/genre_web',
    'genre' => '//source/genre',
    'origine' => '//source/origine',
    'produit' => '//relation_produit/produit',
    'presse_produit' => '//destinations/destination/produit',
    'presse_rubrique' => '//indexation/rubrique',
    'presse_mots_clefs' => '//indexation/indexation_libre'
    ));


  $elementList = $xpath->query('//relation_produit/proprietes[@valeur and @clef]');
  foreach ($elementList as $element) {
    if ($element->getAttribute('clef') == 'NumÃ©ro de parution') {
      $parsed['numero_de_parution'] = intval($element->getAttribute('valeur'));
    }
    if ($element->getAttribute('clef') == 'NumÃ©ro de page') {
      $parsed['numero_de_page'] = $element->getAttribute('valeur');
    }
    if ($element->getAttribute('clef') == 'Parution') {
      $parsed['parution'] = $element->getAttribute('valeur');
    }
    if ($element->getAttribute('clef') == 'Type') {
      $parsed['type_parution'] = $element->getAttribute('valeur');
    }
    if ($element->getAttribute('clef') == 'Date Publication Print') {
      $parsed['date_parution'] = $element->getAttribute('valeur');
    }
  }


  $domNodeList = $xpath->query('//auteurs/auteur');

  if (is_object($domNodeList) && $domNodeList->length != 0) {
    foreach ($domNodeList as $domNode) {
      $auteur = array();
      $auteur['nom'] = batire_xml_node_value_get($xpath, 'nom', $domNode);
      if (empty($auteur['nom'])) {
        continue;
      }
      $auteur['mail'] = batire_xml_node_value_get($xpath, 'mail', $domNode);
      $auteur['informations'] = batire_xml_node_value_get($xpath, 'informations', $domNode);
      $parsed['auteur'][] = $auteur;
    }
  }
  $data['bid'] = batire_hierarchy_get_document_bid($parsed['id'], $data['doc_type']);
  $data['super_id'] = $parsed['id'];
  $parsed['body']['contenu1'] = batire_xml_node_xml_get($xpath, '//contenu_texte/contenu1');
  $parsed['body']['encadres'] = batire_xml_node_xml_get($xpath, '//contenu_texte/encadres');
  $data = array_merge($data, $parsed);
}

function _batire_xml_parse_get_links(&$data, $dom) {
  $xpath = batire_xml_get_xpath($dom);

  $domNodeList = $xpath->query('//liens_objets_metiers/objet_metier');
  if (is_object($domNodeList) && $domNodeList->length != 0) {
    foreach ($domNodeList as $domNode) {
      // Look for REFERENCE or FILS links
      if ($domNode->getAttribute('nature') == 'REFERENCE') {
        $id  = $domNode->getAttribute('id');
        $ref = $domNode->getAttribute('ref');
        $pos = $domNode->getAttribute('position');
        $classe = $domNode->getAttribute('classe');
        $bid = batire_hierarchy_get_document_bid($ref, BATIRE_HIERARCHY_DT_ARICLE);
        $titre = batire_xml_node_value_get($xpath, 'titre', $domNode);

        $data['liens']['lien_reference'][] = array('bid' => $bid, 'title' => $titre, 'position' => $pos, 'refid' => $id, 'type' => $classe);
      } elseif ($domNode->getAttribute('nature') == 'FILS') {
        $ref = $domNode->getAttribute('ref');
        $pos = $domNode->getAttribute('position');
        $bid = batire_hierarchy_get_document_bid($ref, BATIRE_HIERARCHY_DT_ARICLE);
        $titre = batire_xml_node_value_get($xpath, 'titre', $domNode);

        $data['liens']['lien_fils'][] = array('bid' => $bid, 'title' => $titre, 'position' => $pos);
      }
    }
  }
}

function _batire_xml_parse_get_media(&$data, $dom) {
  $xpath = batire_xml_get_xpath($dom);

  $domNodeList = $xpath->query('//objet_media[@ref]');
  if (is_object($domNodeList) && $domNodeList->length != 0) {
    $domNode = $domNodeList->item(0);
    $ref = $domNode->getAttribute('ref');
    $type = $domNode->getAttribute('nature');
    $legende = batire_xml_node_value_get($xpath, 'legende', $domNode);
    $vignette = batire_xml_node_value_get($xpath, 'vignette', $domNode);

    if ($ref)
      $ref_path = $ref;//dirname($dom->documentURI) . '/' . $ref;
    if ($vignette)
      $vignette_path = $vignette; //dirname($dom->documentURI) . '/' . $vignette;

    $data['media'] = array('fiche' => $ref, 'fiche_path' => $ref_path, 'type' => $type, 'vignette' => $vignette, 'vignette_path' => $vignette_path, 'legende' => $legende);
  }
}


/*
 * Create or update Author node
 *
 * @param &$data
 *  Parsed data
 */
function _batire_xml_parse_add_author_node($cck_field, $author) {

  if (empty($author['nom'])) {
    return $cck_field;
  }

  $author_nid = batire_find_author($author['nom']);
  if ($author_nid) {
    return batire_add_cck_field_value($cck_field, 'nid', $author_nid);
  }

  $node = new stdClass();

  $node->type = 'batire_auteur';
  $node->uid = 1;
  $node->status = 1;
  $language = language_default();
  $node->language = $language->language;

  $node->title = $author['nom'];

  if ($author['informations']) $node->field_author_info[0]['value'] = $author['informations'];
  if ($author['mail']) $node->field_email[0]['value'] = $author['mail'];
  // Process taxonomy
  $terms = array();
  // Code de contenu
  $terms[CP_CODE_DE_CONTENU_VID] = CP_CODE_AUTEUR_TID;
  $node->taxonomy = $terms;
  node_save($node);

 return batire_add_cck_field_value($cck_field, 'nid', $node->nid);
}