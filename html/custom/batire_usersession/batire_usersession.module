<?php

/**
 * @file
 * Batire user sessions functionality. (Ma session en cours)
 */
define('BATIRE_USERSESSION_MAX_ALL', 3);
define('BATIRE_USERSESSION_MAX_SEARCHES', 3);
define('BATIRE_USERSESSION_MAX_DOCS', 2);

define('BATIRE_USERSESSION_NAMESPACE', 'batire_usersession');

/**
 * Implementation of hook_ctools_plugin_directory().
 */
function batire_usersession_ctools_plugin_directory($module, $plugin) {
  if ($module == 'ctools') {
    return 'plugins/' . $plugin;
  }
  if ($module == 'panels' && $plugin == 'styles') {
    return 'plugins/' . $plugin;
  }

  if ($module == 'panels' && $plugin == 'cache') {
    return 'plugins/' . $plugin;
  }
}

/**
 * Implementation of hook_nodeapi().
 */
function batire_usersession_nodeapi(&$node, $op, $a3 = NULL, $a4 = NULL) {
  /**
   * For documents we need to store them in user session;
   */
  switch ($op) {
    case 'view':
      if (_batire_site_is_document($node->type)) {
        $args = arg();
        if ($args[0] == 'node' && is_numeric($args[1])) {
          batire_usersession_doc_add($node);
        }
      }
      break;
  }
}

/**
 * Implementation of hook_theme().
 */
function batire_usersession_theme() {
  $items = array(
    'batire_usersession_info_content' => array(
      'arguments' => array('docs_cnt' => NULL, 'searches_cnt' => NULL),
      'file' => 'theme/theme.inc',
    ),
    'batire_usersession_doc_item_add_content' => array(
      'arguments' => array('node' => NULL),
      'file' => 'theme/theme.inc',
    ),
    'batire_usersession_search_item_add_content' => array(
      'arguments' => array('data' => array()),
      'file' => 'theme/theme.inc',
    ),
    'batire_usersession_view_items_content' => array(
      'arguments' => array('items' => NULL, 'total_items_num' => NULL, 'page' => 1, 'type' => 'all'),
      'file' => 'theme/theme.inc',
    ),
  );

  return $items;
}

/**
 * Implementation of hook_perm().
 */
function batire_usersession_perm() {
  return array('access usersession');
}

/**
 * Implementation of hook_menu().
 */
function batire_usersession_menu() {
  $items = array();

  $items['js/batire_usersession/getinfo/%'] = array(
    'type' => MENU_CALLBACK,
    'page callback' => 'batire_usersession_getinfo_js',
    'page arguments' => array(3),
    'access arguments' => array('access usersession'),
  );
  return $items;
}

/**
 * Callback for all recents js;
 */
function batire_usersession_getinfo_js($op) {
  $result = array(
    'data' => NULL,
  );
  $page = isset($_GET['page']) ? $_GET['page'] : 1;

  $recents = batire_usersession_get_recents();
  if ($recents) {
    switch ($op) {
      case 'all' :
        $getinfo_html = array();
        $items = array_slice(array_reverse($recents), ($page - 1) * BATIRE_USERSESSION_MAX_ALL, BATIRE_USERSESSION_MAX_ALL);
        $items_cnt = count($recents);
        if ($items) {
          $result['data'] = theme('batire_usersession_view_items_content', $items, $items_cnt, $page, 'all');
        }
        break;

      case 'docs' :
        $getinfo_html = array();
        if (is_array($recents)) {
          $recent_keys = array_keys($recents);
          $items_keys = array_flip(array_filter($recent_keys, "batire_usersession_get_docs"));
          $items_all = array_intersect_key($recents, $items_keys);
          $items_cnt = count($items_all);
          $items = array_slice(array_reverse($items_all), ($page - 1) * BATIRE_USERSESSION_MAX_DOCS, BATIRE_USERSESSION_MAX_DOCS);
          if ($items) {
            $result['data'] = theme('batire_usersession_view_items_content', $items, $items_cnt, $page, 'docs');
          }
        }
        break;

      case 'searches' :
        $getinfo_html = array();
        if (is_array($recents)) {
          $recent_keys = array_keys($recents);
          $items_keys = array_flip(array_filter($recent_keys, "batire_usersession_get_searches"));
          $items_all = array_intersect_key($recents, $items_keys);
          $items_cnt = count($items_all);
          $items = array_slice(array_reverse($items_all), ($page - 1) * BATIRE_USERSESSION_MAX_SEARCHES, BATIRE_USERSESSION_MAX_SEARCHES);
          if ($items) {
            $result['data'] = theme('batire_usersession_view_items_content', $items, $items_cnt, $page, 'searches');
          }
        }
        break;
    }
  }
  drupal_json($result);
  return NULL;
}

/**
 * Check if variable is numeric
 * @param $var Variable
 * @return Bool TRUE|FALSE
 */
function batire_usersession_get_docs($var) {
  return is_numeric($var);
}

/**
 * Check if variable is not numeric
 * @param $var Variable
 * @return Bool TRUE|FALSE
 */
function batire_usersession_get_searches($var) {
  return!is_numeric($var);
}

/**
 * Add node to session storage
 * @param $node
 */
function batire_usersession_doc_add($node) {
  $session = _batire_site_get_session(BATIRE_USERSESSION_NAMESPACE, array('recents' => array()));
  $session['recents'][$node->nid] = theme('batire_usersession_doc_item_add_content', $node);
  _batire_site_set_session(BATIRE_USERSESSION_NAMESPACE, $session);
}

/**
 * Add searches to session storage
 * @param $sid Search id
 * @param $title Title of search
 * @param $link Url to search
 * @param $num_results Count of results
 */
function batire_usersession_search_add($sid, $search_data = array()) {
  $session = _batire_site_get_session(BATIRE_USERSESSION_NAMESPACE, array('recents' => array()));
  if (!empty($search_data)) {
    $key = 's' . $sid;
    if (!empty($search_data['keyword'])) {
      $title = t('Recherche du @date (@keyword)', array(
        '@date' => format_date($search_data['created'], 'custom', 'd/m/Y - H\hi'),
        '@keyword' => $search_data['keyword'])
      );
    }
    else {
      $title = t('Recherche du @date', array(
        '@date' => format_date($search_data['created'], 'custom', 'd/m/Y - H\hi'))
      );
    }

    $data = array(
      'title' => $title,
      'link' => l(format_plural($search_data['count'], '@count résultat trouvé', '@count résultats trouvés'), $search_data['url'])
    );
    $session['recents'][$key] = theme('batire_usersession_search_item_add_content', $data);
    _batire_site_set_session(BATIRE_USERSESSION_NAMESPACE, $session);
  }
}

/**
 * Returns list of recents
 */
function batire_usersession_get_recents() {
  $recents = _batire_site_get_session(BATIRE_USERSESSION_NAMESPACE, array('recents' => array()));
  return (isset($recents['recents'])) ? $recents['recents'] : NULL;
}